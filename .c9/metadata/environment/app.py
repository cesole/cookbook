{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":45,"position":45,"stack":[[{"start":{"row":0,"column":0},"end":{"row":194,"column":19},"action":"insert","lines":["import os","from flask import Flask, render_template, flash, redirect, request, url_for, session, make_response, current_app","from flask_pymongo import PyMongo","import pymongo","from pymongo import MongoClient","from bson.objectid import ObjectId","import json","from datetime import datetime","from functools import update_wrapper","","# MONGO_DBNAME = os.environ.get('MONGODB_NAME')","# MONGODB_URI = os.environ.get('MONGODB_URI')","","","app = Flask(__name__)","app.config['TESTING'] = True","app.testing = True","app.secret_key = \"daddy_day\"","","app.config['MONGO_DBNAME'] = 'cook_book'","app.config[\"MONGO_URI\"] = 'mongodb://admin:admin01@ds161102.mlab.com:61102/cook_book'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/get_home')","def get_home():","    return render_template('index.html',","                          recipes = mongo.db.recipes.find())","","@app.route('/get_recipes')","def get_recipes():"," ","    return render_template('recipes.html',","                           recipes=mongo.db.recipes.find())","","","@app.route(\"/recipedetail/<recipe_id>\")","def recipedetail(recipe_id):","    the_recipe = mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)})","    return render_template('recipedetail.html',","    recipe=the_recipe) ","    ","","","                           ","@app.route('/update_recipe_rating/<recipe_id>', methods=['POST'])","def update_recipe_rating(recipe_id):","   ","    recipe = mongo.db.recipes","    ","    this_recipe = mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)})","    ","    number_of_votes = int(this_recipe['number_of_votes'])","    print('number_of_votes is: ', number_of_votes)","    ","    initial_recipe_rating = int(this_recipe['recipe_rating'])","    print('initial recipe rating is: ',  initial_recipe_rating)","    ","    latest_recipe_rating = int(request.json['recipe_rating'])","    print('latest recipe rating posted is: ', latest_recipe_rating)","    ","  ","    ","    return ('', 204)","    ","","@app.route('/get_login', methods=['GET', 'POST'])","def get_login():","   ","    logged_in = False","    if request.method == 'GET' and not 'username' in session:","        return render_template('login.html',","                               logged_in=logged_in)","    elif request.method == 'GET' and 'username' in session:","        logged_in = True","        recipes = mongo.db.recipes.find()","        ","        recipes_dict = {}","        ","        for i, recipe in enumerate(recipes):","            recipe.pop('_id', None)","            recipes_dict[i] = recipe","        ","        recipes_dict = json.dumps(recipes_dict)","","        return render_template('login.html',","                               username=session['username'],","                               logged_in=logged_in,","                               recipes=recipes_dict)","    if request.method == 'POST':","        session['username'] = request.form[\"username\"]","        logged_in = True","        recipes=mongo.db.recipes.find()","        recipes_dict = {}","        ","        for i, recipe in enumerate(recipes):","            recipe.pop('_id', None)","            recipes_dict[i] = recipe","        ","        recipes_dict = json.dumps(recipes_dict)","            ","        return render_template('login.html',","                              username=session['username'],","                              logged_in=logged_in,","                              recipes=recipes_dict)","","","@app.route('/get_logout')","def get_logout():","        print('logged out')","        session.clear()","        return redirect(url_for('get_home'))","","","@app.route('/get_my_recipes', methods=['GET', 'POST'])","def get_my_recipes():","    if not 'username' in session:","        return redirect('/get_login')","    else:","        recipes = mongo.db.recipes.find()","        return render_template('user_recipes.html',","                           username=session['username'],","                           recipes=recipes)","","","@app.route('/get_add_recipe_form')","def get_add_recipe_form():","    ","    if request.url.startswith('http://'):","        request.url = request.url.replace('http://', 'https://', 1)","    print('url when get_add_recipe_form: ', request.url)","    return render_template('addrecipe.html',","                           flavour=mongo.db.flavour.find(),","                           meal_type=mongo.db.meal_type.find(),","                           base_ingredient=mongo.db.base_ingredient.find(),","                           unit_measurement=mongo.db.unit_measurement.find(),","                           author_name=mongo.db.author_name.find())","","","@app.route('/write_to_recipe_database', methods=['POST'])","def write_to_recipe_database():","   ","    recipes = mongo.db.recipes","    ","    recipes.insert_one(request.json)","    ","    return ('', 204)","    ","","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","   ","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_my_recipes'))","","","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    the_recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    return render_template('edit_recipe.html', recipe=the_recipe)","","","@app.route('/update_edited_recipe/<recipe_id>', methods=['POST'])","def update_edited_recipe(recipe_id):","    recipes = mongo.db.recipes","    ","    recipes.insert_one(request.json),","    {","        'recipe_name': request.form.get['recipe_name'],","        'recipe_description': request.form.get['recipe_description'],","        'flavour': request.form.get['flavour'],","        'meal_type': request.form.get['meal_type'],","        'base_ingredient': request.form.get['base_ingredient'],","        'recipe_image_url': request.form.get['recipe_image_url'],","        'is_vegan': request.form.get['is_vegan'],","        'ingredients': request.form.get['ingredients'],","        'steps': request.form.get['steps'],","        'author_name': request.form.get['author_name']","    }","    return redirect(url_for('get_my_recipes'))","","@app.route('/contact')","def contact():","    '''Routing view to render/call contact.html in browser'''","    return render_template(\"contact.html\")","","","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"],"id":1}],[{"start":{"row":17,"column":18},"end":{"row":17,"column":27},"action":"remove","lines":["daddy_day"],"id":2},{"start":{"row":17,"column":18},"end":{"row":17,"column":19},"action":"insert","lines":["c"]},{"start":{"row":17,"column":19},"end":{"row":17,"column":20},"action":"insert","lines":["o"]},{"start":{"row":17,"column":20},"end":{"row":17,"column":21},"action":"insert","lines":["o"]},{"start":{"row":17,"column":21},"end":{"row":17,"column":22},"action":"insert","lines":["k"]},{"start":{"row":17,"column":22},"end":{"row":17,"column":23},"action":"insert","lines":["_"]},{"start":{"row":17,"column":23},"end":{"row":17,"column":24},"action":"insert","lines":["b"]},{"start":{"row":17,"column":24},"end":{"row":17,"column":25},"action":"insert","lines":["o"]},{"start":{"row":17,"column":25},"end":{"row":17,"column":26},"action":"insert","lines":["o"]},{"start":{"row":17,"column":26},"end":{"row":17,"column":27},"action":"insert","lines":["k"]}],[{"start":{"row":10,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["# MONGO_DBNAME = os.environ.get('MONGODB_NAME')","# MONGODB_URI = os.environ.get('MONGODB_URI')","",""],"id":3}],[{"start":{"row":13,"column":18},"end":{"row":14,"column":28},"action":"remove","lines":["","app.secret_key = \"cook_book\""],"id":4}],[{"start":{"row":11,"column":0},"end":{"row":18,"column":20},"action":"remove","lines":["app = Flask(__name__)","app.config['TESTING'] = True","app.testing = True","","app.config['MONGO_DBNAME'] = 'cook_book'","app.config[\"MONGO_URI\"] = 'mongodb://admin:admin01@ds161102.mlab.com:61102/cook_book'","","mongo = PyMongo(app)"],"id":5},{"start":{"row":11,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)",""]}],[{"start":{"row":19,"column":0},"end":{"row":188,"column":19},"action":"remove","lines":["@app.route('/')","@app.route('/get_home')","def get_home():","    return render_template('index.html',","                          recipes = mongo.db.recipes.find())","","@app.route('/get_recipes')","def get_recipes():"," ","    return render_template('recipes.html',","                           recipes=mongo.db.recipes.find())","","","@app.route(\"/recipedetail/<recipe_id>\")","def recipedetail(recipe_id):","    the_recipe = mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)})","    return render_template('recipedetail.html',","    recipe=the_recipe) ","    ","","","                           ","@app.route('/update_recipe_rating/<recipe_id>', methods=['POST'])","def update_recipe_rating(recipe_id):","   ","    recipe = mongo.db.recipes","    ","    this_recipe = mongo.db.recipes.find_one({'_id': ObjectId(recipe_id)})","    ","    number_of_votes = int(this_recipe['number_of_votes'])","    print('number_of_votes is: ', number_of_votes)","    ","    initial_recipe_rating = int(this_recipe['recipe_rating'])","    print('initial recipe rating is: ',  initial_recipe_rating)","    ","    latest_recipe_rating = int(request.json['recipe_rating'])","    print('latest recipe rating posted is: ', latest_recipe_rating)","    ","  ","    ","    return ('', 204)","    ","","@app.route('/get_login', methods=['GET', 'POST'])","def get_login():","   ","    logged_in = False","    if request.method == 'GET' and not 'username' in session:","        return render_template('login.html',","                               logged_in=logged_in)","    elif request.method == 'GET' and 'username' in session:","        logged_in = True","        recipes = mongo.db.recipes.find()","        ","        recipes_dict = {}","        ","        for i, recipe in enumerate(recipes):","            recipe.pop('_id', None)","            recipes_dict[i] = recipe","        ","        recipes_dict = json.dumps(recipes_dict)","","        return render_template('login.html',","                               username=session['username'],","                               logged_in=logged_in,","                               recipes=recipes_dict)","    if request.method == 'POST':","        session['username'] = request.form[\"username\"]","        logged_in = True","        recipes=mongo.db.recipes.find()","        recipes_dict = {}","        ","        for i, recipe in enumerate(recipes):","            recipe.pop('_id', None)","            recipes_dict[i] = recipe","        ","        recipes_dict = json.dumps(recipes_dict)","            ","        return render_template('login.html',","                              username=session['username'],","                              logged_in=logged_in,","                              recipes=recipes_dict)","","","@app.route('/get_logout')","def get_logout():","        print('logged out')","        session.clear()","        return redirect(url_for('get_home'))","","","@app.route('/get_my_recipes', methods=['GET', 'POST'])","def get_my_recipes():","    if not 'username' in session:","        return redirect('/get_login')","    else:","        recipes = mongo.db.recipes.find()","        return render_template('user_recipes.html',","                           username=session['username'],","                           recipes=recipes)","","","@app.route('/get_add_recipe_form')","def get_add_recipe_form():","    ","    if request.url.startswith('http://'):","        request.url = request.url.replace('http://', 'https://', 1)","    print('url when get_add_recipe_form: ', request.url)","    return render_template('addrecipe.html',","                           flavour=mongo.db.flavour.find(),","                           meal_type=mongo.db.meal_type.find(),","                           base_ingredient=mongo.db.base_ingredient.find(),","                           unit_measurement=mongo.db.unit_measurement.find(),","                           author_name=mongo.db.author_name.find())","","","@app.route('/write_to_recipe_database', methods=['POST'])","def write_to_recipe_database():","   ","    recipes = mongo.db.recipes","    ","    recipes.insert_one(request.json)","    ","    return ('', 204)","    ","","@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","   ","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_my_recipes'))","","","@app.route('/edit_recipe/<recipe_id>')","def edit_recipe(recipe_id):","    the_recipe = mongo.db.recipes.find_one({\"_id\": ObjectId(recipe_id)})","    return render_template('edit_recipe.html', recipe=the_recipe)","","","@app.route('/update_edited_recipe/<recipe_id>', methods=['POST'])","def update_edited_recipe(recipe_id):","    recipes = mongo.db.recipes","    ","    recipes.insert_one(request.json),","    {","        'recipe_name': request.form.get['recipe_name'],","        'recipe_description': request.form.get['recipe_description'],","        'flavour': request.form.get['flavour'],","        'meal_type': request.form.get['meal_type'],","        'base_ingredient': request.form.get['base_ingredient'],","        'recipe_image_url': request.form.get['recipe_image_url'],","        'is_vegan': request.form.get['is_vegan'],","        'ingredients': request.form.get['ingredients'],","        'steps': request.form.get['steps'],","        'author_name': request.form.get['author_name']","    }","    return redirect(url_for('get_my_recipes'))","","@app.route('/contact')","def contact():","    '''Routing view to render/call contact.html in browser'''","    return render_template(\"contact.html\")","","","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"],"id":6},{"start":{"row":19,"column":0},"end":{"row":92,"column":23},"action":"insert","lines":["","@app.route('/')","@app.route('/index')","def index():","    return render_template('index.html')","    ","@app.route('/breakfast')","def breakfast():","    return render_template('breakfast.html',","                            meals=mongo.db.meals.find())","","@app.route('/dinner')","def dinner():","    return render_template('dinner.html',","                            meals=mongo.db.meals.find())","","@app.route('/dessert')","def dessert():","    return render_template('dessert.html',","                            meals=mongo.db.meals.find())","","@app.route('/login', methods=[\"POST\", \"GET\"])","def login():","    users = mongo.db.users","    login_user = users.find_one({\"username\" : request.form.get(\"username\", False)})","    if login_user:","        if (request.form['pass']) == login_user['password']:","            session['username'] = request.form['username']","            return redirect(url_for('index'))","        flash('Invalid username/password combination')","","    return render_template('login.html')","","@app.route('/register', methods=[\"POST\", \"GET\"])","def register():","    if request.method == \"POST\":","        users = mongo.db.users","        existing_user = users.find_one({\"username\" : request.form['username']})","        if existing_user is None:","            users.insert({'username' : request.form['username'],","                            'password' : request.form['pass'],","                            'email' : request.form['email']","            })","            session['username'] = request.form['username']","            return redirect(url_for('index'))","        flash(\"Username already exist! Try again!\")","    return render_template('register.html')","    ","@app.route('/add_recipe')","def add_recipe():","    return render_template('add_recipe.html',","                            categories=mongo.db.categories.find(),","                            images=mongo.db.images.find())","                            ","@app.route('/insert_recipe', methods=['POST'])","def insert_recipe():","    meals =  mongo.db.meals","    meals.insert_one(request.form.to_dict())","    return redirect(url_for('index'))","    ","@app.route('/logout')","def logout():","    session.clear()","    return redirect(url_for('index'))","    ","@app.route('/recipe/<meal_id>', methods=['GET', 'POST'])","def recipe(meal_id):","    the_meal =  mongo.db.meals.find_one({\"_id\": ObjectId(meal_id)})","    return render_template('recipe.html', meal=the_meal)","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}],[{"start":{"row":25,"column":13},"end":{"row":25,"column":22},"action":"remove","lines":["breakfast"],"id":7},{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"insert","lines":["v"]},{"start":{"row":25,"column":14},"end":{"row":25,"column":15},"action":"insert","lines":["e"]},{"start":{"row":25,"column":15},"end":{"row":25,"column":16},"action":"insert","lines":["g"]},{"start":{"row":25,"column":16},"end":{"row":25,"column":17},"action":"insert","lines":["a"]},{"start":{"row":25,"column":17},"end":{"row":25,"column":18},"action":"insert","lines":["n"]}],[{"start":{"row":27,"column":28},"end":{"row":27,"column":37},"action":"remove","lines":["breakfast"],"id":8},{"start":{"row":27,"column":28},"end":{"row":27,"column":29},"action":"insert","lines":["v"]},{"start":{"row":27,"column":29},"end":{"row":27,"column":30},"action":"insert","lines":["e"]},{"start":{"row":27,"column":30},"end":{"row":27,"column":31},"action":"insert","lines":["g"]},{"start":{"row":27,"column":31},"end":{"row":27,"column":32},"action":"insert","lines":["a"]},{"start":{"row":27,"column":32},"end":{"row":27,"column":33},"action":"insert","lines":["n"]}],[{"start":{"row":30,"column":13},"end":{"row":30,"column":19},"action":"remove","lines":["dinner"],"id":9},{"start":{"row":30,"column":13},"end":{"row":30,"column":14},"action":"insert","lines":["v"]},{"start":{"row":30,"column":14},"end":{"row":30,"column":15},"action":"insert","lines":["e"]},{"start":{"row":30,"column":15},"end":{"row":30,"column":16},"action":"insert","lines":["g"]},{"start":{"row":30,"column":16},"end":{"row":30,"column":17},"action":"insert","lines":["e"]},{"start":{"row":30,"column":17},"end":{"row":30,"column":18},"action":"insert","lines":["t"]},{"start":{"row":30,"column":18},"end":{"row":30,"column":19},"action":"insert","lines":["a"]},{"start":{"row":30,"column":19},"end":{"row":30,"column":20},"action":"insert","lines":["r"]},{"start":{"row":30,"column":20},"end":{"row":30,"column":21},"action":"insert","lines":["i"]},{"start":{"row":30,"column":21},"end":{"row":30,"column":22},"action":"insert","lines":["a"]},{"start":{"row":30,"column":22},"end":{"row":30,"column":23},"action":"insert","lines":["n"]}],[{"start":{"row":32,"column":28},"end":{"row":32,"column":34},"action":"remove","lines":["dinner"],"id":10},{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"insert","lines":["v"]},{"start":{"row":32,"column":29},"end":{"row":32,"column":30},"action":"insert","lines":["e"]},{"start":{"row":32,"column":30},"end":{"row":32,"column":31},"action":"insert","lines":["g"]},{"start":{"row":32,"column":31},"end":{"row":32,"column":32},"action":"insert","lines":["t"]},{"start":{"row":32,"column":32},"end":{"row":32,"column":33},"action":"insert","lines":["e"]}],[{"start":{"row":32,"column":32},"end":{"row":32,"column":33},"action":"remove","lines":["e"],"id":11},{"start":{"row":32,"column":31},"end":{"row":32,"column":32},"action":"remove","lines":["t"]}],[{"start":{"row":32,"column":31},"end":{"row":32,"column":32},"action":"insert","lines":["e"],"id":12},{"start":{"row":32,"column":32},"end":{"row":32,"column":33},"action":"insert","lines":["t"]},{"start":{"row":32,"column":33},"end":{"row":32,"column":34},"action":"insert","lines":["a"]},{"start":{"row":32,"column":34},"end":{"row":32,"column":35},"action":"insert","lines":["r"]},{"start":{"row":32,"column":35},"end":{"row":32,"column":36},"action":"insert","lines":["i"]},{"start":{"row":32,"column":36},"end":{"row":32,"column":37},"action":"insert","lines":["a"]},{"start":{"row":32,"column":37},"end":{"row":32,"column":38},"action":"insert","lines":["n"]}],[{"start":{"row":27,"column":28},"end":{"row":27,"column":37},"action":"remove","lines":["breakfast"],"id":13},{"start":{"row":27,"column":28},"end":{"row":27,"column":29},"action":"insert","lines":["v"]},{"start":{"row":27,"column":29},"end":{"row":27,"column":30},"action":"insert","lines":["e"]},{"start":{"row":27,"column":30},"end":{"row":27,"column":31},"action":"insert","lines":["g"]},{"start":{"row":27,"column":31},"end":{"row":27,"column":32},"action":"insert","lines":["a"]},{"start":{"row":27,"column":32},"end":{"row":27,"column":33},"action":"insert","lines":["n"]}],[{"start":{"row":32,"column":28},"end":{"row":32,"column":34},"action":"remove","lines":["dinner"],"id":14},{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"insert","lines":["v"]},{"start":{"row":32,"column":29},"end":{"row":32,"column":30},"action":"insert","lines":["e"]},{"start":{"row":32,"column":30},"end":{"row":32,"column":31},"action":"insert","lines":["g"]},{"start":{"row":32,"column":31},"end":{"row":32,"column":32},"action":"insert","lines":["e"]},{"start":{"row":32,"column":32},"end":{"row":32,"column":33},"action":"insert","lines":["t"]},{"start":{"row":32,"column":33},"end":{"row":32,"column":34},"action":"insert","lines":["a"]},{"start":{"row":32,"column":34},"end":{"row":32,"column":35},"action":"insert","lines":["r"]},{"start":{"row":32,"column":35},"end":{"row":32,"column":36},"action":"insert","lines":["i"]},{"start":{"row":32,"column":36},"end":{"row":32,"column":37},"action":"insert","lines":["a"]},{"start":{"row":32,"column":37},"end":{"row":32,"column":38},"action":"insert","lines":["n"]}],[{"start":{"row":25,"column":13},"end":{"row":25,"column":22},"action":"remove","lines":["breakfast"],"id":15},{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"insert","lines":["v"]},{"start":{"row":25,"column":14},"end":{"row":25,"column":15},"action":"insert","lines":["e"]},{"start":{"row":25,"column":15},"end":{"row":25,"column":16},"action":"insert","lines":["g"]},{"start":{"row":25,"column":16},"end":{"row":25,"column":17},"action":"insert","lines":["a"]},{"start":{"row":25,"column":17},"end":{"row":25,"column":18},"action":"insert","lines":["n"]}],[{"start":{"row":30,"column":13},"end":{"row":30,"column":19},"action":"remove","lines":["dinner"],"id":16},{"start":{"row":30,"column":13},"end":{"row":30,"column":14},"action":"insert","lines":["v"]},{"start":{"row":30,"column":14},"end":{"row":30,"column":15},"action":"insert","lines":["e"]},{"start":{"row":30,"column":15},"end":{"row":30,"column":16},"action":"insert","lines":["g"]},{"start":{"row":30,"column":16},"end":{"row":30,"column":17},"action":"insert","lines":["e"]},{"start":{"row":30,"column":17},"end":{"row":30,"column":18},"action":"insert","lines":["t"]},{"start":{"row":30,"column":18},"end":{"row":30,"column":19},"action":"insert","lines":["a"]},{"start":{"row":30,"column":19},"end":{"row":30,"column":20},"action":"insert","lines":["r"]},{"start":{"row":30,"column":20},"end":{"row":30,"column":21},"action":"insert","lines":["i"]},{"start":{"row":30,"column":21},"end":{"row":30,"column":22},"action":"insert","lines":["a"]},{"start":{"row":30,"column":22},"end":{"row":30,"column":23},"action":"insert","lines":["n"]}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":13},"action":"remove","lines":["breakfast"],"id":17},{"start":{"row":26,"column":4},"end":{"row":26,"column":5},"action":"insert","lines":["v"]},{"start":{"row":26,"column":5},"end":{"row":26,"column":6},"action":"insert","lines":["e"]},{"start":{"row":26,"column":6},"end":{"row":26,"column":7},"action":"insert","lines":["g"]},{"start":{"row":26,"column":7},"end":{"row":26,"column":8},"action":"insert","lines":["a"]},{"start":{"row":26,"column":8},"end":{"row":26,"column":9},"action":"insert","lines":["n"]}],[{"start":{"row":31,"column":4},"end":{"row":31,"column":10},"action":"remove","lines":["dinner"],"id":18},{"start":{"row":31,"column":4},"end":{"row":31,"column":5},"action":"insert","lines":["v"]},{"start":{"row":31,"column":5},"end":{"row":31,"column":6},"action":"insert","lines":["e"]},{"start":{"row":31,"column":6},"end":{"row":31,"column":7},"action":"insert","lines":["g"]},{"start":{"row":31,"column":7},"end":{"row":31,"column":8},"action":"insert","lines":["e"]},{"start":{"row":31,"column":8},"end":{"row":31,"column":9},"action":"insert","lines":["t"]},{"start":{"row":31,"column":9},"end":{"row":31,"column":10},"action":"insert","lines":["a"]},{"start":{"row":31,"column":10},"end":{"row":31,"column":11},"action":"insert","lines":["r"]},{"start":{"row":31,"column":11},"end":{"row":31,"column":12},"action":"insert","lines":["i"]},{"start":{"row":31,"column":12},"end":{"row":31,"column":13},"action":"insert","lines":["a"]},{"start":{"row":31,"column":13},"end":{"row":31,"column":14},"action":"insert","lines":["n"]}],[{"start":{"row":77,"column":37},"end":{"row":78,"column":0},"action":"insert","lines":["",""],"id":19},{"start":{"row":78,"column":0},"end":{"row":78,"column":4},"action":"insert","lines":["    "]},{"start":{"row":78,"column":4},"end":{"row":79,"column":0},"action":"insert","lines":["",""]},{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"insert","lines":["    "]},{"start":{"row":79,"column":4},"end":{"row":80,"column":0},"action":"insert","lines":["",""]},{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"remove","lines":["    "],"id":20},{"start":{"row":79,"column":4},"end":{"row":80,"column":0},"action":"remove","lines":["",""]},{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":79,"column":0},"end":{"row":80,"column":0},"action":"insert","lines":["",""],"id":21}],[{"start":{"row":80,"column":0},"end":{"row":85,"column":53},"action":"insert","lines":["@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)"],"id":22}],[{"start":{"row":80,"column":18},"end":{"row":80,"column":22},"action":"remove","lines":["task"],"id":23},{"start":{"row":80,"column":18},"end":{"row":80,"column":19},"action":"insert","lines":["m"]},{"start":{"row":80,"column":19},"end":{"row":80,"column":20},"action":"insert","lines":["e"]},{"start":{"row":80,"column":20},"end":{"row":80,"column":21},"action":"insert","lines":["a"]},{"start":{"row":80,"column":21},"end":{"row":80,"column":22},"action":"insert","lines":["l"]}],[{"start":{"row":80,"column":24},"end":{"row":80,"column":28},"action":"remove","lines":["task"],"id":24},{"start":{"row":80,"column":24},"end":{"row":80,"column":25},"action":"insert","lines":["m"]},{"start":{"row":80,"column":25},"end":{"row":80,"column":26},"action":"insert","lines":["e"]},{"start":{"row":80,"column":26},"end":{"row":80,"column":27},"action":"insert","lines":["a"]},{"start":{"row":80,"column":27},"end":{"row":80,"column":28},"action":"insert","lines":["l"]}],[{"start":{"row":81,"column":9},"end":{"row":81,"column":13},"action":"remove","lines":["task"],"id":25},{"start":{"row":81,"column":9},"end":{"row":81,"column":10},"action":"insert","lines":["m"]},{"start":{"row":81,"column":10},"end":{"row":81,"column":11},"action":"insert","lines":["e"]},{"start":{"row":81,"column":11},"end":{"row":81,"column":12},"action":"insert","lines":["a"]},{"start":{"row":81,"column":12},"end":{"row":81,"column":13},"action":"insert","lines":["l"]}],[{"start":{"row":81,"column":14},"end":{"row":81,"column":18},"action":"remove","lines":["task"],"id":26},{"start":{"row":81,"column":14},"end":{"row":81,"column":15},"action":"insert","lines":["m"]},{"start":{"row":81,"column":15},"end":{"row":81,"column":16},"action":"insert","lines":["e"]},{"start":{"row":81,"column":16},"end":{"row":81,"column":17},"action":"insert","lines":["a"]},{"start":{"row":81,"column":17},"end":{"row":81,"column":18},"action":"insert","lines":["l"]}],[{"start":{"row":82,"column":8},"end":{"row":82,"column":12},"action":"remove","lines":["task"],"id":27},{"start":{"row":82,"column":8},"end":{"row":82,"column":9},"action":"insert","lines":["m"]},{"start":{"row":82,"column":9},"end":{"row":82,"column":10},"action":"insert","lines":["e"]},{"start":{"row":82,"column":10},"end":{"row":82,"column":11},"action":"insert","lines":["a"]},{"start":{"row":82,"column":11},"end":{"row":82,"column":12},"action":"insert","lines":["l"]}],[{"start":{"row":82,"column":26},"end":{"row":82,"column":30},"action":"remove","lines":["asks"],"id":28},{"start":{"row":82,"column":25},"end":{"row":82,"column":26},"action":"remove","lines":["t"]}],[{"start":{"row":82,"column":25},"end":{"row":82,"column":26},"action":"insert","lines":["m"],"id":29},{"start":{"row":82,"column":26},"end":{"row":82,"column":27},"action":"insert","lines":["e"]},{"start":{"row":82,"column":27},"end":{"row":82,"column":28},"action":"insert","lines":["a"]},{"start":{"row":82,"column":28},"end":{"row":82,"column":29},"action":"insert","lines":["l"]}],[{"start":{"row":82,"column":56},"end":{"row":82,"column":60},"action":"remove","lines":["task"],"id":30},{"start":{"row":82,"column":56},"end":{"row":82,"column":57},"action":"insert","lines":["m"]},{"start":{"row":82,"column":57},"end":{"row":82,"column":58},"action":"insert","lines":["e"]},{"start":{"row":82,"column":58},"end":{"row":82,"column":59},"action":"insert","lines":["a"]},{"start":{"row":82,"column":59},"end":{"row":82,"column":60},"action":"insert","lines":["l"]}],[{"start":{"row":84,"column":32},"end":{"row":84,"column":36},"action":"remove","lines":["task"],"id":31},{"start":{"row":84,"column":32},"end":{"row":84,"column":33},"action":"insert","lines":["_"]},{"start":{"row":84,"column":33},"end":{"row":84,"column":34},"action":"insert","lines":["r"]},{"start":{"row":84,"column":34},"end":{"row":84,"column":35},"action":"insert","lines":["e"]},{"start":{"row":84,"column":35},"end":{"row":84,"column":36},"action":"insert","lines":["c"]},{"start":{"row":84,"column":36},"end":{"row":84,"column":37},"action":"insert","lines":["i"]},{"start":{"row":84,"column":37},"end":{"row":84,"column":38},"action":"insert","lines":["p"]},{"start":{"row":84,"column":38},"end":{"row":84,"column":39},"action":"insert","lines":["e"]}],[{"start":{"row":84,"column":47},"end":{"row":84,"column":51},"action":"remove","lines":["task"],"id":32},{"start":{"row":84,"column":47},"end":{"row":84,"column":48},"action":"insert","lines":["m"]},{"start":{"row":84,"column":48},"end":{"row":84,"column":49},"action":"insert","lines":["e"]},{"start":{"row":84,"column":49},"end":{"row":84,"column":50},"action":"insert","lines":["a"]},{"start":{"row":84,"column":50},"end":{"row":84,"column":51},"action":"insert","lines":["l"]}],[{"start":{"row":84,"column":56},"end":{"row":84,"column":60},"action":"remove","lines":["task"],"id":33},{"start":{"row":84,"column":56},"end":{"row":84,"column":57},"action":"insert","lines":["m"]},{"start":{"row":84,"column":57},"end":{"row":84,"column":58},"action":"insert","lines":["e"]},{"start":{"row":84,"column":58},"end":{"row":84,"column":59},"action":"insert","lines":["a"]},{"start":{"row":84,"column":59},"end":{"row":84,"column":60},"action":"insert","lines":["l"]}],[{"start":{"row":80,"column":18},"end":{"row":80,"column":22},"action":"remove","lines":["meal"],"id":34},{"start":{"row":80,"column":18},"end":{"row":80,"column":19},"action":"insert","lines":["r"]},{"start":{"row":80,"column":19},"end":{"row":80,"column":20},"action":"insert","lines":["e"]},{"start":{"row":80,"column":20},"end":{"row":80,"column":21},"action":"insert","lines":["c"]},{"start":{"row":80,"column":21},"end":{"row":80,"column":22},"action":"insert","lines":["i"]},{"start":{"row":80,"column":22},"end":{"row":80,"column":23},"action":"insert","lines":["p"]},{"start":{"row":80,"column":23},"end":{"row":80,"column":24},"action":"insert","lines":["e"]}],[{"start":{"row":50,"column":40},"end":{"row":51,"column":0},"action":"insert","lines":["",""],"id":35},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"insert","lines":["    "]},{"start":{"row":51,"column":4},"end":{"row":52,"column":0},"action":"insert","lines":["",""]},{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"insert","lines":["    "]},{"start":{"row":52,"column":4},"end":{"row":53,"column":0},"action":"insert","lines":["",""]},{"start":{"row":53,"column":0},"end":{"row":53,"column":4},"action":"insert","lines":["    "]},{"start":{"row":53,"column":4},"end":{"row":54,"column":0},"action":"insert","lines":["",""]},{"start":{"row":54,"column":0},"end":{"row":54,"column":4},"action":"insert","lines":["    "]},{"start":{"row":54,"column":4},"end":{"row":55,"column":0},"action":"insert","lines":["",""]},{"start":{"row":55,"column":0},"end":{"row":55,"column":4},"action":"insert","lines":["    "]},{"start":{"row":55,"column":4},"end":{"row":56,"column":0},"action":"insert","lines":["",""]},{"start":{"row":56,"column":0},"end":{"row":56,"column":4},"action":"insert","lines":["    "]},{"start":{"row":56,"column":4},"end":{"row":57,"column":0},"action":"insert","lines":["",""]},{"start":{"row":57,"column":0},"end":{"row":57,"column":4},"action":"insert","lines":["    "]},{"start":{"row":57,"column":4},"end":{"row":58,"column":0},"action":"insert","lines":["",""]},{"start":{"row":58,"column":0},"end":{"row":58,"column":4},"action":"insert","lines":["    "]},{"start":{"row":58,"column":4},"end":{"row":59,"column":0},"action":"insert","lines":["",""]},{"start":{"row":59,"column":0},"end":{"row":59,"column":4},"action":"insert","lines":["    "]},{"start":{"row":59,"column":4},"end":{"row":60,"column":0},"action":"insert","lines":["",""]},{"start":{"row":60,"column":0},"end":{"row":60,"column":4},"action":"insert","lines":["    "]},{"start":{"row":60,"column":4},"end":{"row":61,"column":0},"action":"insert","lines":["",""]},{"start":{"row":61,"column":0},"end":{"row":61,"column":4},"action":"insert","lines":["    "]},{"start":{"row":61,"column":4},"end":{"row":62,"column":0},"action":"insert","lines":["",""]},{"start":{"row":62,"column":0},"end":{"row":62,"column":4},"action":"insert","lines":["    "]},{"start":{"row":62,"column":4},"end":{"row":63,"column":0},"action":"insert","lines":["",""]},{"start":{"row":63,"column":0},"end":{"row":63,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":55,"column":4},"end":{"row":93,"column":51},"action":"insert","lines":["@app.route('/get_login', methods=['GET', 'POST'])","def get_login():","   ","    logged_in = False","    if request.method == 'GET' and not 'username' in session:","        return render_template('login.html',","                               logged_in=logged_in)","    elif request.method == 'GET' and 'username' in session:","        logged_in = True","        recipes = mongo.db.recipes.find()","        ","        recipes_dict = {}","        ","        for i, recipe in enumerate(recipes):","            recipe.pop('_id', None)","            recipes_dict[i] = recipe","        ","        recipes_dict = json.dumps(recipes_dict)","","        return render_template('login.html',","                               username=session['username'],","                               logged_in=logged_in,","                               recipes=recipes_dict)","    if request.method == 'POST':","        session['username'] = request.form[\"username\"]","        logged_in = True","        recipes=mongo.db.recipes.find()","        recipes_dict = {}","        ","        for i, recipe in enumerate(recipes):","            recipe.pop('_id', None)","            recipes_dict[i] = recipe","        ","        recipes_dict = json.dumps(recipes_dict)","            ","        return render_template('login.html',","                              username=session['username'],","                              logged_in=logged_in,","                              recipes=recipes_dict)"],"id":36}],[{"start":{"row":53,"column":0},"end":{"row":98,"column":4},"action":"remove","lines":["    ","    ","    @app.route('/get_login', methods=['GET', 'POST'])","def get_login():","   ","    logged_in = False","    if request.method == 'GET' and not 'username' in session:","        return render_template('login.html',","                               logged_in=logged_in)","    elif request.method == 'GET' and 'username' in session:","        logged_in = True","        recipes = mongo.db.recipes.find()","        ","        recipes_dict = {}","        ","        for i, recipe in enumerate(recipes):","            recipe.pop('_id', None)","            recipes_dict[i] = recipe","        ","        recipes_dict = json.dumps(recipes_dict)","","        return render_template('login.html',","                               username=session['username'],","                               logged_in=logged_in,","                               recipes=recipes_dict)","    if request.method == 'POST':","        session['username'] = request.form[\"username\"]","        logged_in = True","        recipes=mongo.db.recipes.find()","        recipes_dict = {}","        ","        for i, recipe in enumerate(recipes):","            recipe.pop('_id', None)","            recipes_dict[i] = recipe","        ","        recipes_dict = json.dumps(recipes_dict)","            ","        return render_template('login.html',","                              username=session['username'],","                              logged_in=logged_in,","                              recipes=recipes_dict)","    ","    ","    ","    ","    "],"id":37},{"start":{"row":52,"column":4},"end":{"row":53,"column":0},"action":"remove","lines":["",""]},{"start":{"row":52,"column":0},"end":{"row":52,"column":4},"action":"remove","lines":["    "]},{"start":{"row":51,"column":4},"end":{"row":52,"column":0},"action":"remove","lines":["",""]},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":50,"column":40},"end":{"row":51,"column":0},"action":"remove","lines":["",""],"id":38}],[{"start":{"row":68,"column":43},"end":{"row":69,"column":0},"action":"insert","lines":["",""],"id":39},{"start":{"row":69,"column":0},"end":{"row":69,"column":4},"action":"insert","lines":["    "]},{"start":{"row":69,"column":4},"end":{"row":70,"column":0},"action":"insert","lines":["",""]},{"start":{"row":70,"column":0},"end":{"row":70,"column":4},"action":"insert","lines":["    "]},{"start":{"row":70,"column":4},"end":{"row":71,"column":0},"action":"insert","lines":["",""]},{"start":{"row":71,"column":0},"end":{"row":71,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":71,"column":0},"end":{"row":71,"column":4},"action":"remove","lines":["    "],"id":40}],[{"start":{"row":71,"column":0},"end":{"row":79,"column":43},"action":"insert","lines":["@app.route('/get_my_recipes', methods=['GET', 'POST'])","def get_my_recipes():","    if not 'username' in session:","        return redirect('/get_login')","    else:","        recipes = mongo.db.recipes.find()","        return render_template('user_recipes.html',","                           username=session['username'],","                           recipes=recipes)"],"id":41}],[{"start":{"row":85,"column":58},"end":{"row":86,"column":0},"action":"insert","lines":["",""],"id":42},{"start":{"row":86,"column":0},"end":{"row":86,"column":28},"action":"insert","lines":["                            "]},{"start":{"row":86,"column":28},"end":{"row":87,"column":0},"action":"insert","lines":["",""]},{"start":{"row":87,"column":0},"end":{"row":87,"column":28},"action":"insert","lines":["                            "]},{"start":{"row":87,"column":28},"end":{"row":88,"column":0},"action":"insert","lines":["",""]},{"start":{"row":88,"column":0},"end":{"row":88,"column":28},"action":"insert","lines":["                            "]},{"start":{"row":88,"column":28},"end":{"row":89,"column":0},"action":"insert","lines":["",""]},{"start":{"row":89,"column":0},"end":{"row":89,"column":28},"action":"insert","lines":["                            "]}],[{"start":{"row":89,"column":24},"end":{"row":89,"column":28},"action":"remove","lines":["    "],"id":43},{"start":{"row":89,"column":20},"end":{"row":89,"column":24},"action":"remove","lines":["    "]},{"start":{"row":89,"column":16},"end":{"row":89,"column":20},"action":"remove","lines":["    "]},{"start":{"row":89,"column":12},"end":{"row":89,"column":16},"action":"remove","lines":["    "]},{"start":{"row":89,"column":8},"end":{"row":89,"column":12},"action":"remove","lines":["    "]},{"start":{"row":89,"column":4},"end":{"row":89,"column":8},"action":"remove","lines":["    "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":89,"column":0},"end":{"row":93,"column":46},"action":"insert","lines":["@app.route('/delete_recipe/<recipe_id>')","def delete_recipe(recipe_id):","   ","    mongo.db.recipes.remove({'_id': ObjectId(recipe_id)})","    return redirect(url_for('get_my_recipes'))"],"id":44}],[{"start":{"row":93,"column":46},"end":{"row":94,"column":0},"action":"insert","lines":["",""],"id":45},{"start":{"row":94,"column":0},"end":{"row":94,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":89,"column":28},"end":{"row":89,"column":34},"action":"remove","lines":["recipe"],"id":46},{"start":{"row":89,"column":28},"end":{"row":89,"column":29},"action":"insert","lines":["m"]},{"start":{"row":89,"column":29},"end":{"row":89,"column":30},"action":"insert","lines":["e"]},{"start":{"row":89,"column":30},"end":{"row":89,"column":31},"action":"insert","lines":["a"]},{"start":{"row":89,"column":31},"end":{"row":89,"column":32},"action":"insert","lines":["l"]}]]},"ace":{"folds":[],"scrolltop":685,"scrollleft":0,"selection":{"start":{"row":89,"column":38},"end":{"row":89,"column":38},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":87,"state":"start","mode":"ace/mode/python"}},"timestamp":1565794753649,"hash":"402915ed60a62ecdb7f1178c3d33aa8eec52361b"}